[metadata]
name = 'audapter'
version = '0.1.1'
description = 'Adaptive Sound Processing'
author = 'borley1211'
author_email = 'km.isetan@gmail.com'
license = 'MIT'
url = 'https://github.com/borley1211/audapter'
[tool.poetry]
name = 'audapter'
version = '0.1.1'
description = 'Adaptive Sound Processing'
authors = ['borley1211 <km.isetan@gmail.com>']
license = 'MIT'
keywords = [
    'adaptive',
    'signal',
    'sound',
    'audio',
]
include = [
    'audapter/**/*.py',
    'audapter/*.toml',
]
exclude = ['**/ipynb_checkpoints/**/*']

[tool.poetry.dependencies]
python = '^3.7'
numpy = '^1.17'
sounddevice = '^0.3.14'
pysoundfile = '^0.9.0'
dynaconf = '^2.2'
scipy = '^1.4.0'
nptyping = '^0.3.1'
pyroomacoustics = '^0.3.1'

[tool.poetry.dependencies.typer]
extras = ['all']
version = '^0.0.8'

[tool.poetry.dependencies.adasigpy]
version = '^0.1.7-beta.0'
allow-prereleases = true

[tool.poetry.dependencies.syncsweptsine]
git = 'https://github.com/SiggiGue/syncsweptsine.git'

[tool.poetry.dev-dependencies]
sphinx = '^2.2'
sphinx-rtd-theme = '^0.4.3'
recommonmark = '^0.6.0'
flake8 = '^3.7'
mypy = '^0.740.0'
ptpython = '^2.0'
pynvim = '^0.3.2'
neovim = '^0.3.1'
isort = '^4.3'
pyls-black = '^0.4.4'
pyls-mypy = '^0.1.8'
pyls-isort = '^0.1.1'
pytest = '^5.2'
poetry-version = '^0.1.5'
ipykernel = '^5.1.3'
notebook = '^6.0.2'
matplotlib = '^3.1.2'
jupyter-contrib-nbextensions = '^0.5.1'
jupyter-nbextensions-configurator = '^0.4.1'
pysndfx = '^0.3.6'
pydocstyle = '^5.0.1'
plotly = '^4.4.1'
seaborn = '^0.9.0'

[tool.poetry.dev-dependencies.black]
version = '*'
allow-prereleases = true

[tool.poetry.dev-dependencies.jupyter-lsp]
version = '^0.7.0-beta.0'
allow-prereleases = true

[tool.poetry.dev-dependencies.python-language-server]
extras = ['all']
version = '^0.31.7'

[tool.poetry.scripts]
audapter = 'audapter:main'

[tool.black]
line-length = 89
include = '\.pyi?$'
exclude = '''
(
    /(
        \.eggs         # exclude a few common directories in the
        | \.git          # root of the project
        | \.hg
        | \.mypy_cache
        | \.tox
        | \.venv
        | _build
        | buck-out
        | build
        | dist
    )/
)
'''
[tool.hatch.commands]
prerelease = 'hatch build'

[build-system]
requires = [
    'poetry>=0.12',
    'setuptools',
    'wheel',
]
build-backend = 'poetry.masonry.api'

[requires]
python_version = [
    '2.7',
    '3.7',
    '3.8',
    'pypy',
    'pypy3',
]
